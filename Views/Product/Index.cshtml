@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<style>
    .card-body p {
        margin-bottom: 0.1rem;
        /* Mengurangi jarak antar paragraf */
    }
    a.disabled {
    pointer-events: none;
    cursor: default;
    opacity: 0.9;
}

    .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        transition: 0.3s;
        border-radius: 5px;
        /* 5px rounded corners */
        background-color: #ffffff;
        /* Light grey background */
        padding: 10px;
        /* Some padding */
        width: 98%;
        /* Adjust this value to change the width of the card */
        height: 120%;
        /* Adjust this value to change the height of the card */
    }

    .card:hover {
        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
    }

    .card-title {
        font-size: 1.25em;
        /* Larger title text */
        font-family: 'Roboto', sans-serif;
        /* Roboto font */
    }

    .card-text {
        font-size: 1em;
        /* Larger text */
        font-family: 'Roboto', sans-serif;
        /* Roboto font */
    }

    .modal-content {
        background-color: #f8f9fa;
        /* Light grey background */
        border-radius: 10px;
        /* Rounded corners */
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
        /* Shadow for a 3D effect */
    }

    .modal-header {
        border-bottom: 1px solid #dee2e6;
        /* Add a border to the bottom of the header */
        background-color: #e9ecef;
        /* Light grey background */
    }

    .modal-footer {
        border-top: 1px solid #dee2e6;
        /* Add a border to the top of the footer */
        background-color: #e9ecef;
        /* Light grey background */
    }

    .modal-title {
        color: #495057;
        /* Dark grey text */
        font-size: 1.25em;
        /* Larger title text */
        font-family: 'Roboto', sans-serif;
        /* Roboto font */
    }

    .close {
        color: #495057;
        /* Dark grey text */
    }

    .btn-primary {
        background-color: #007bff;
        /* Blue background */
        border-color: #007bff;
        /* Blue border */
    }

    .btn-primary:hover {
        background-color: #0069d9;
        /* Darker blue on hover */
        border-color: #0062cc;
        /* Darker blue border on hover */
    }

    .btn-secondary {
        background-color: #6c757d;
        /* Grey background */
        border-color: #6c757d;
        /* Grey border */
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        /* Darker grey on hover */
        border-color: #545b62;
        /* Darker grey border on hover */
    }

    .h1class {
        color: #6c757d;
        font-size: 1.9em;
        margin-top: 2%;
    }

    .header-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .btn-margin {
        margin-right: 40px;
        background-color: #62c2d3;
        width: 280px;

    }
    .btn-margin:hover,
    .btn-margin:active {
        background-color: #6bf1be;
    }

    .search-input {
        transition: all 0.3s ease-in-out;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    }

    .search-input:hover {
        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    }

    .search-input:focus {
        outline: none;
        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    }


    .uniform-size {
        height: 40px;
    }

    .mb-1 {
        margin-bottom: 0 !important;
    }

    .search-bar {
        margin-left: 1px;
    }

    .custom-select {
        color: #6c757d;
        border: none;
        border-radius: 4px;
        background: #f8f9fa;
        padding: 7px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
        transition: all 0.3s cubic-bezier(.25, .8, .25, 1);
    }

    .custom-select:hover {
        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    }

    .custom-select:focus {
        outline: none;
        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    }

    .modal-dialog {
        max-width: 500px;
        /* Adjust this value to change the width of the modal */
    }

    /* Reduce the size of the modal's contents */
    .modal-content {
        font-size: 0.8rem;
        /* Adjust this value to change the size of the text */
    }

    /* Reduce the size of the form inputs */
    .form-control,
    .form-control-file {
        height: calc(1.5em + .75rem + 2px);
        /* Adjust this value to change the height of the inputs */
        padding: .375rem .75rem;
        /* Adjust these values to change the padding of the inputs */
    }

    /* Reduce the size of the buttons */
    .btn {
        padding: .375rem .75rem;
        /* Adjust these values to change the padding of the buttons */
        font-size: 0.8rem;
        /* Adjust this value to change the size of the text on the buttons */
    }

    .custom-card-height {
        height: 100%;
        /* Adjust this value to your preference */
    }
    
</style>
<div class="header-container">
    <div>
        <h1 class="h1class">List of Product</h1>
        <p>Use this page to manage product at this mart.</p>
    </div>
    <div class="d-flex justify-content-end align-items-center">
        <button id="addProductButton" type="button" class="btn btn-primary btn-margin uniform-size" data-toggle="modal"
            data-target="#addProductModal">
            Add Product
        </button>
        @model ManageMart.ProductCategoryViewModel


        <div class="input-group mb-1">
            <img src="~/image/category.png" alt="Category" style="height: 25px; margin-right: 10px; margin-top: 10px;">
            <select class="custom-select uniform-size" id="inputGroupSelect01">
                <option selected disabled>Find by Category</option>
                @if (Model != null && Model.Categories != null)
                {
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                }
                <option value="">Semua Category</option>
            </select>
        </div>


        <div class="input-group search-bar">
            <input type="text" class="form-control search-input uniform-size" placeholder="Search Product 🔍"
                id="searchInput">
            <div class="input-group-append">

            </div>
        </div>


    </div>
</div>
<div class="productContainer">
    <div class="row" id="productContainer">
        @foreach (var product in Model.Products)
        {
            <div class="col-md-3 mb-3">
                <div class="card custom-card-height">
                    <div class="card-header">
                        <h5 class="card-title">@product.Name</h5>
                    </div>
                    <img class="card-img-top product-image" src="@product.UrlPhoto" alt="Card image cap"
                        style="height: 194px; width: 100%; padding: 16px;">
                    <div class="card-body">

                        <p class="card-text"><i class="fas fa-user text-info"></i> <strong>Seller:</strong> <span
                                class="text-info">@product.Seller.Name</span></p>
                        <p class="card-text"><i class="fas fa-tags text-primary"></i> <strong>Category:</strong> <span
                                class="text-primary">@product.Category.Name</span></p>
                        <p class="card-text"><i class="fas fa-dollar-sign text-success"></i> <strong>Price:</strong> <span
                                class="text-success">Rp @string.Format("{0:n0}",
                            product.Price)</span></p>
                        <p class="card-text"><i class="fas fa-boxes text-warning"></i> <strong>Stock:</strong> <span
                                class="text-warning">@product.Stock</span></p>
                        <p class="card-text"><i class="fas fa-calendar-alt text-muted"></i> <strong>Production:</strong>
                            <span class="text-muted">@product.CreatedAt.ToString("dd MMMM yyyy")</span>
                        </p>
                        <p class="card-text"><i class="fas fa-calendar-times text-danger"></i> <strong>Expired
                                Date:</strong>
                            <span class="text-danger">@((product.ExpiredAt == DateTime.MaxValue || product.ExpiredAt ==
                            DateTime.MinValue) ? "tidak ada" : product.ExpiredAt.ToString("dd MMMM yyyy"))</span>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-start">
                            <a href="#" class="btn btn-warning @if (User.IsInRole("admin")) { <text>disabled</text> }" 
                                data-toggle="modal" data-target="#editProductModal"
                                data-name="@product.Name" data-category="@product.CategoryId"
                                data-expired="@product.ExpiredAt" data-stock="@product.Stock" data-price="@product.Price"
                                data-urlphoto="@product.UrlPhoto" data-id="@product.Id" data-seller="@product.Seller"
                                onclick="@if (!User.IsInRole("admin")) { <text>editProduct(this)</text> }" style="margin-right: 5px;">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <form action="@Url.Action("Delete", "Product")" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@product.Id" />
                                <button type="submit" class="btn btn-danger" onclick="confirmDelete(event)"><i
                                        class="fas fa-trash"></i> Delete</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("Edit", "Product")" method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <input type="hidden" id="errorMessage" value="@TempData["ErrorMessage"]" />
                        <label for="productName">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="Name"
                            placeholder="Product Name" />
                    </div>
                    <div class="form-group">
                        <label for="productCategory">Category</label>
                        <select class="form-control" id="productCategory" name="CategoryId">
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <input type="hidden" id="productSeller" name="SellerId" value="" />

                    <div class="form-group">
                        <label for="productPrice">Price</label>
                        <input type="number" class="form-control" id="productPrice" name="Price" placeholder="Price" />
                    </div>
                    <div class="form-group" <label for="productExpired">Expired At</label>
                        <input type="date" class="form-control" id="productExpired" name="ExpiredAt" />
                    </div>
                    <div class="form-group">
                        <label for="productStock">Stock</label>
                        <input type="number" class="form-control" id="productStock" name="Stock" placeholder="Stock" />
                    </div>

                    <div class="form-group">
                        <input type="file" class="form-control-file" id="productUrlPhotoEdit" name="UrlPhoto"
                            onchange="loadFile(event, 'outputEdit')">
                        <img id="outputEdit" alt="Image preview" class="img-fluid"
                            style="max-width: 100px; margin-top: 10px;" src="~/image/no-image-available.png">
                        <input type="hidden" id="defaultUrlPhoto" name="DefaultUrlPhoto" />
                    </div>
                    <input type="hidden" id="productId" name="Id" />
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("Create", "Product")" method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="productName">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="Name"
                            placeholder="Product Name" />
                    </div>
                    <div class="form-group">
                        <label for="productCategory">Category</label>
                        <select class="form-control" id="productCategory" name="CategoryId">
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="productExpired">Expired At</label>
                        <input type="date" class="form-control" id="productExpired" name="ExpiredAt">
                    </div>
                    <div class="form-group">
                        <label for="productStock">Stock</label>
                        <input type="number" class="form-control" id="productStock" name="Stock">
                    </div>
                    <div class="form-group">
                        <label for="productPrice">Price</label>
                        <input type="number" class="form-control" id="productPrice" name="Price">
                    </div>

                    <div class="form-group">
                        <input type="file" class="form-control-file" id="productUrlPhotoAdd" name="UrlPhoto"
                            onchange="loadFile(event, 'outputAdd')">
                        <img id="outputAdd" alt="Image preview" class="img-fluid"
                            style="max-width: 100px; margin-top: 10px;" src="~/image/no-image-available.png">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    document.getElementById('addProductButton').addEventListener('click', function (event) {
        @if (User.IsInRole("admin"))
        {
            <text>
                event.preventDefault();
                event.stopImmediatePropagation();
                swal({
                    title: "Access Denied",
                    text: "Sesuai ketentuan hanya seller yang bisa membuat produk , Logout dan login sebagai Seller.",
                    icon: "warning",
                    button: "OK", // Hanya menampilkan tombol OK
                    dangerMode: true,
                });
            </text>
        }
    });
</script>
<script>
    function editProduct(element) {
        var name = element.getAttribute("data-name");
        var category = element.getAttribute("data-category");
        var expired = element.getAttribute("data-expired");
        var date = new Date(expired);
        var formattedDate = date.toISOString().split('T')[0];
        var stock = element.getAttribute("data-stock");
        var price = element.getAttribute("data-price");
        var urlPhoto = element.getAttribute("data-urlphoto");
        var id = element.getAttribute("data-id");
        var seller = element.getAttribute("data-seller");

        document.getElementById("productName").value = name;
        document.getElementById("productCategory").value = category;
        document.getElementById("productExpired").value = formattedDate;
        document.getElementById("productStock").value = stock;
        document.getElementById("productPrice").value = price;
        document.getElementById("outputEdit").src = urlPhoto;
        document.getElementById("productId").value = id;
        document.getElementById("productSeller").value = seller;
        document.getElementById("defaultUrlPhoto").value = urlPhoto;
    }



</script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#searchInput").on("keyup", function () {
            var query = $(this).val().toLowerCase(); // Ubah ke lowercase agar pencarian case-insensitive
            if (query.length > 0) {
                searchProducts(query); // Panggil fungsi pencarian
            } else {
                location.reload(); // Reload jika query kosong
            }
        });
    });

    function searchProducts(query) {
        $.get("/Product/Search?query=" + query, function (data, status) {
            // Kosongkan kontainer produk
            $("#productContainer").empty();

            // Loop untuk setiap produk dan tambahkan kartu produk baru ke kontainer
            $.each(data, function (i, product) {
                var card = `<div class='col-md-3 mb-4'>
                            <div class='card h-100'>
                                <img class='card-img-top product-image' src='${product.urlPhoto}' alt='Card image cap' style='height: 215px; width: 100%; padding: 20px;'>
                                <div class='card-body d-flex flex-column'>
                                    <h5 class='card-title'>${product.name}</h5>
                                    <p class='card-text' style='color: green;'><strong>Price:</strong> Rp ${product.price.toLocaleString()}</p>
                                    <p class='card-text' style='color: blue;'><strong>Stock:</strong> ${product.stock}</p>
                                    <p class='card-text' style='color: red;'><strong>Expired Date:</strong> ${new Date(product.expiredAt).toLocaleDateString("id-ID", { day: 'numeric', month: 'long', year: 'numeric' })}</p>
                                    <div class='mt-auto'>
                                        <a href='#' class='btn btn-warning' data-toggle='modal' data-target='#editProductModal' data-name='${product.name}' data-category='${product.categoryId}' data-expired='${product.expiredAt}' data-stock='${product.stock}' data-price='${product.price}' data-urlphoto='${product.urlPhoto}' data-id='${product.id}' data-seller='${product.seller}' onclick='editProduct(this)' style='margin-right: 7px;'>Edit</a>
                                        <form action='/Product/Delete' method='post' class='d-inline'>
                                            <input type='hidden' name='id' value='${product.id}' />
                                            <button type='submit' class='btn btn-danger' onclick='confirmDelete(event)'>Delete</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                // Tambahkan kartu produk ke kontainer
                $("#productContainer").append(card);
            });
        });
    }
</script>

<script>
    function loadFile(event, outputId) {
        var output = document.getElementById(outputId);
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    };
</script>
<script>
    $(document).ready(function () {
        var errorMessage = $('#errorMessage').val();
        if (errorMessage) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: errorMessage
            });
        }
    });
</script>
<script>
    function confirmDelete(event) {
        event.preventDefault();
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                event.target.form.submit();
            }
        })
    }
</script>
<script>
    $(document).ready(function () {
        $("#inputGroupSelect01").on("change", function () {
            var categoryId = $(this).val();
            if (categoryId) {
                filterProductsByCategory(categoryId);
            } else {
                location.reload();
            }
        });
    });

    function filterProductsByCategory(categoryId) {
        $.get("/Product/FilterByCategory?categoryId=" + categoryId, function (data, status) {
            $("#productContainer").empty();
            $.each(data, function (i, product) {
                var card = `<div class='col-md-3 mb-4'>
                     <div class='card h-100'>
                                <img class='card-img-top product-image' src='${product.urlPhoto}' alt='Card image cap' style='height: 215px; width: 100%; padding: 20px;'>
                                <div class='card-body d-flex flex-column'>
                                    <h5 class='card-title'>${product.name}</h5>
                                    <p class='card-text' style='color: green;'><strong>Price:</strong> Rp ${product.price.toLocaleString()}</p>
                                    <p class='card-text' style='color: blue;'><strong>Stock:</strong> ${product.stock}</p>
                                    <p class='card-text' style='color: red;'><strong>Expired Date:</strong> ${new Date(product.expiredAt).toLocaleDateString("id-ID", { day: 'numeric', month: 'long', year: 'numeric' })}</p>
                                    <div class='mt-auto'>
                                        <a href='#' class='btn btn-warning' data-toggle='modal' data-target='#editProductModal' data-name='${product.name}' data-category='${product.categoryId}' data-expired='${product.expiredAt}' data-stock='${product.stock}' data-price='${product.price}' data-urlphoto='${product.urlPhoto}' data-id='${product.id}' data-seller='${product.seller}' onclick='editProduct(this)' style='margin-right: 7px;'>Edit</a>
                                        <form action='/Product/Delete' method='post' class='d-inline'>
                                            <input type='hidden' name='id' value='${product.id}' />
                                            <button type='submit' class='btn btn-danger' onclick='confirmDelete(event)'>Delete</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                    </div>`;
                $("#productContainer").append(card);
            });
        });
    }
</script>
